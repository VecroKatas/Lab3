Inline comment:	// This is a simple test file for the lexical analyzer
Keyword:	public
Keyword:	class
Identifier:	InputTest
Delimiter:	{
Keyword:	public
Keyword:	static
Keyword:	void
Identifier:	main
Delimiter:	(
Identifier:	String
Identifier:	args
Delimiter:	)
Delimiter:	{
Inline comment:	// Variables declaration
Keyword:	int
Identifier:	a
Operator:	=
Integer:	5
Delimiter:	;
Keyword:	double
Identifier:	b
Operator:	=
Float:	10.75
Delimiter:	;
Identifier:	String
Identifier:	message
Operator:	=
String Literal:	"Hello, world!"
Delimiter:	;
Inline comment:	// A condition with a comparison operator
Keyword:	if
Delimiter:	(
Identifier:	a
Operator:	<
Identifier:	b
Delimiter:	)
Delimiter:	{
Identifier:	System
Delimiter:	.
Identifier:	out
Delimiter:	.
Identifier:	println
Delimiter:	(
Identifier:	message
Delimiter:	)
Delimiter:	;
Delimiter:	}
Multiline comment:	 /* multiline comment with single line */
Keyword:	int
Identifier:	result
Operator:	=
Identifier:	a
Operator:	+
Invalid Hexadecimal:	0x73A
Operator:	+
Invalid Hexadecimal:	0x12Z
Delimiter:	;
Multiline comment:	 /* Multiline comment with a couple of text lines */
Keyword:	char
Identifier:	symbol
Operator:	=
Character Literal:	'A'
Delimiter:	;
Keyword:	for
Delimiter:	(
Keyword:	int
Identifier:	i
Operator:	=
Integer:	0
Delimiter:	;
Identifier:	i
Operator:	<
Integer:	10
Delimiter:	;
Identifier:	i
Operator:	+
Operator:	+
Delimiter:	)
Delimiter:	{
Identifier:	System
Delimiter:	.
Identifier:	out
Delimiter:	.
Identifier:	println
Delimiter:	(
Identifier:	i
Delimiter:	)
Delimiter:	;
Delimiter:	}
Delimiter:	}
Delimiter:	}
